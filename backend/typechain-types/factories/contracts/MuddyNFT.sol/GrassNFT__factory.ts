/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  GrassNFT,
  GrassNFTInterface,
} from "../../../contracts/MuddyNFT.sol/GrassNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURL",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenContract",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x683635c9adc5dea00000600a5561010060405260426080818152906200153260a039600b90620000309082620001ee565b503480156200003e57600080fd5b5060405162001574380380620015748339810160408190526200006191620002ba565b6040518060400160405280600881526020016711dc985cdcd3919560c21b8152506040518060400160405280600481526020016311d3919560e21b8152508160029081620000b09190620001ee565b506003620000bf8282620001ee565b50506000805550620000d133620000f7565b600980546001600160a01b0319166001600160a01b0392909216919091179055620002ec565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200017457607f821691505b6020821081036200019557634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001e957600081815260208120601f850160051c81016020861015620001c45750805b601f850160051c820191505b81811015620001e557828155600101620001d0565b5050505b505050565b81516001600160401b038111156200020a576200020a62000149565b62000222816200021b84546200015f565b846200019b565b602080601f8311600181146200025a5760008415620002415750858301515b600019600386901b1c1916600185901b178555620001e5565b600085815260208120601f198616915b828110156200028b578886015182559484019460019091019084016200026a565b5085821015620002aa5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215620002cd57600080fd5b81516001600160a01b0381168114620002e557600080fd5b9392505050565b61123680620002fc6000396000f3fe60806040526004361061012a5760003560e01c80636352211e116100ab578063a0712d681161006f578063a0712d68146102ef578063a22cb4651461030f578063b88d4fde1461032f578063c87b56dd14610342578063e985e9c514610362578063f2fde38b146103ab57600080fd5b80636352211e1461026757806370a0823114610287578063715018a6146102a75780638da5cb5b146102bc57806395d89b41146102da57600080fd5b806323b872dd116100f257806323b872dd146101f657806326ab82c91461020957806340c84b0e1461021f57806342842e0e1461023457806355a373d61461024757600080fd5b806301ffc9a71461012f57806306fdde0314610164578063081812fc14610186578063095ea7b3146101be57806318160ddd146101d3575b600080fd5b34801561013b57600080fd5b5061014f61014a366004610e80565b6103cb565b60405190151581526020015b60405180910390f35b34801561017057600080fd5b5061017961041d565b60405161015b9190610eed565b34801561019257600080fd5b506101a66101a1366004610f00565b6104af565b6040516001600160a01b03909116815260200161015b565b6101d16101cc366004610f35565b6104f3565b005b3480156101df57600080fd5b50600154600054035b60405190815260200161015b565b6101d1610204366004610f5f565b610593565b34801561021557600080fd5b506101e8600a5481565b34801561022b57600080fd5b5061017961072b565b6101d1610242366004610f5f565b6107b9565b34801561025357600080fd5b506009546101a6906001600160a01b031681565b34801561027357600080fd5b506101a6610282366004610f00565b6107d9565b34801561029357600080fd5b506101e86102a2366004610f9b565b6107e4565b3480156102b357600080fd5b506101d1610833565b3480156102c857600080fd5b506008546001600160a01b03166101a6565b3480156102e657600080fd5b50610179610847565b3480156102fb57600080fd5b506101d161030a366004610f00565b610856565b34801561031b57600080fd5b506101d161032a366004610fc4565b610946565b6101d161033d366004611011565b6109b2565b34801561034e57600080fd5b5061017961035d366004610f00565b6109fc565b34801561036e57600080fd5b5061014f61037d3660046110ed565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b3480156103b757600080fd5b506101d16103c6366004610f9b565b610a8d565b60006301ffc9a760e01b6001600160e01b0319831614806103fc57506380ac58cd60e01b6001600160e01b03198316145b806104175750635b5e139f60e01b6001600160e01b03198316145b92915050565b60606002805461042c90611120565b80601f016020809104026020016040519081016040528092919081815260200182805461045890611120565b80156104a55780601f1061047a576101008083540402835291602001916104a5565b820191906000526020600020905b81548152906001019060200180831161048857829003601f168201915b5050505050905090565b60006104ba82610b03565b6104d7576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b60006104fe826107d9565b9050336001600160a01b038216146105375761051a813361037d565b610537576040516367d9dca160e11b815260040160405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061059e82610b2a565b9050836001600160a01b0316816001600160a01b0316146105d15760405162a1148160e81b815260040160405180910390fd5b60008281526006602052604090208054338082146001600160a01b0388169091141761061e57610601863361037d565b61061e57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03851661064557604051633a954ecd60e21b815260040160405180910390fd5b801561065057600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b841690036106e2576001840160008181526004602052604081205490036106e05760005481146106e05760008181526004602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b600b805461073890611120565b80601f016020809104026020016040519081016040528092919081815260200182805461076490611120565b80156107b15780601f10610786576101008083540402835291602001916107b1565b820191906000526020600020905b81548152906001019060200180831161079457829003601f168201915b505050505081565b6107d4838383604051806020016040528060008152506109b2565b505050565b600061041782610b2a565b60006001600160a01b03821661080d576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b61083b610b91565b6108456000610beb565b565b60606003805461042c90611120565b600581106108b95760405162461bcd60e51b815260206004820152602560248201527f4d6178696d756d206e756d626572206f66204e46547320706572206d696e742060448201526434b9901a9760d91b60648201526084015b60405180910390fd5b600954600a546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610914573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610938919061115a565b506109433382610c3d565b50565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6109bd848484610593565b6001600160a01b0383163b156109f6576109d984848484610d3b565b6109f6576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b6060610a0782610b03565b610a2457604051630a14c4b560e41b815260040160405180910390fd5b6000610a3b60408051602081019091526000815290565b90508051600003610a5b5760405180602001604052806000815250610a86565b80610a6584610e26565b604051602001610a76929190611177565b6040516020818303038152906040525b9392505050565b610a95610b91565b6001600160a01b038116610afa5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016108b0565b61094381610beb565b6000805482108015610417575050600090815260046020526040902054600160e01b161590565b600081600054811015610b785760008181526004602052604081205490600160e01b82169003610b76575b80600003610a86575060001901600081815260046020526040902054610b55565b505b604051636f96cda160e11b815260040160405180910390fd5b6008546001600160a01b031633146108455760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016108b0565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000805490829003610c625760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b03831660008181526005602090815260408083208054680100000000000000018802019055848352600490915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b818114610d1157808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600101610cd9565b5081600003610d3257604051622e076360e81b815260040160405180910390fd5b60005550505050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610d709033908990889088906004016111a6565b6020604051808303816000875af1925050508015610dab575060408051601f3d908101601f19168201909252610da8918101906111e3565b60015b610e09573d808015610dd9576040519150601f19603f3d011682016040523d82523d6000602084013e610dde565b606091505b508051600003610e01576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a900480610e405750819003601f19909101908152919050565b6001600160e01b03198116811461094357600080fd5b600060208284031215610e9257600080fd5b8135610a8681610e6a565b60005b83811015610eb8578181015183820152602001610ea0565b50506000910152565b60008151808452610ed9816020860160208601610e9d565b601f01601f19169290920160200192915050565b602081526000610a866020830184610ec1565b600060208284031215610f1257600080fd5b5035919050565b80356001600160a01b0381168114610f3057600080fd5b919050565b60008060408385031215610f4857600080fd5b610f5183610f19565b946020939093013593505050565b600080600060608486031215610f7457600080fd5b610f7d84610f19565b9250610f8b60208501610f19565b9150604084013590509250925092565b600060208284031215610fad57600080fd5b610a8682610f19565b801515811461094357600080fd5b60008060408385031215610fd757600080fd5b610fe083610f19565b91506020830135610ff081610fb6565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561102757600080fd5b61103085610f19565b935061103e60208601610f19565b925060408501359150606085013567ffffffffffffffff8082111561106257600080fd5b818701915087601f83011261107657600080fd5b81358181111561108857611088610ffb565b604051601f8201601f19908116603f011681019083821181831017156110b0576110b0610ffb565b816040528281528a60208487010111156110c957600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561110057600080fd5b61110983610f19565b915061111760208401610f19565b90509250929050565b600181811c9082168061113457607f821691505b60208210810361115457634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561116c57600080fd5b8151610a8681610fb6565b60008351611189818460208801610e9d565b83519083019061119d818360208801610e9d565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111d990830184610ec1565b9695505050505050565b6000602082840312156111f557600080fd5b8151610a8681610e6a56fea2646970667358221220336b124fa0119a79af80a170947e8a6ea5f59ba9631bfa7763765702b3bd90e164736f6c63430008130033697066733a2f2f6261667962656967776b63326e726a7a376e33653235337574376c6f64333674347275626e68666d6a6b6d71327779657274697735717a32726934";

type GrassNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GrassNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GrassNFT__factory extends ContractFactory {
  constructor(...args: GrassNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _tokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_tokenAddress, overrides || {});
  }
  override deploy(
    _tokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_tokenAddress, overrides || {}) as Promise<
      GrassNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GrassNFT__factory {
    return super.connect(runner) as GrassNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GrassNFTInterface {
    return new Interface(_abi) as GrassNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): GrassNFT {
    return new Contract(address, _abi, runner) as unknown as GrassNFT;
  }
}
