/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { PayableOverrides } from "../../../common";
import type { Muddy, MuddyInterface } from "../../../contracts/Muddy.sol/Muddy";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "decimals_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "initialBalance_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "feeReceiver_",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "Optimization",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "recoverERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526ca5991087451c1033267e441c7f6007556040516200123d3803806200123d8339810160408190526200003791620002aa565b8585856004620000488482620003e0565b506005620000578382620003e0565b5060035550506040516001600160a01b038216903480156108fc02916000818181858888f1935050505015801562000093573d6000803e3d6000fd5b50600680546001600160a01b0319166001600160a01b038416179055620000d382620000c186600a620005c1565b620000cd9086620005d6565b620000df565b50505050505062000606565b6001600160a01b0382166200013a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200014e9190620005f0565b90915550506001600160a01b038216600090815260208190526040812080548392906200017d908490620005f0565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001f457600080fd5b81516001600160401b0380821115620002115762000211620001cc565b604051601f8301601f19908116603f011681019082821181831017156200023c576200023c620001cc565b816040528381526020925086838588010111156200025957600080fd5b600091505b838210156200027d57858201830151818301840152908201906200025e565b600093810190920192909252949350505050565b6001600160a01b0381168114620002a757600080fd5b50565b60008060008060008060c08789031215620002c457600080fd5b86516001600160401b0380821115620002dc57600080fd5b620002ea8a838b01620001e2565b975060208901519150808211156200030157600080fd5b506200031089828a01620001e2565b95505060408701519350606087015192506080870151620003318162000291565b60a0880151909250620003448162000291565b809150509295509295509295565b600181811c908216806200036757607f821691505b6020821081036200038857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001c757600081815260208120601f850160051c81016020861015620003b75750805b601f850160051c820191505b81811015620003d857828155600101620003c3565b505050505050565b81516001600160401b03811115620003fc57620003fc620001cc565b62000414816200040d845462000352565b846200038e565b602080601f8311600181146200044c5760008415620004335750858301515b600019600386901b1c1916600185901b178555620003d8565b600085815260208120601f198616915b828110156200047d578886015182559484019460019091019084016200045c565b50858210156200049c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000503578160001904821115620004e757620004e7620004ac565b80851615620004f557918102915b93841c9390800290620004c7565b509250929050565b6000826200051c57506001620005bb565b816200052b57506000620005bb565b81600181146200054457600281146200054f576200056f565b6001915050620005bb565b60ff841115620005635762000563620004ac565b50506001821b620005bb565b5060208310610133831016604e8410600b841016171562000594575081810a620005bb565b620005a08383620004c2565b8060001904821115620005b757620005b7620004ac565b0290505b92915050565b6000620005cf83836200050b565b9392505050565b8082028115828204841417620005bb57620005bb620004ac565b80820180821115620005bb57620005bb620004ac565b610c2780620006166000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a2578063a457c2d711610071578063a457c2d714610211578063a9059cbb14610224578063b2bdfa7b14610237578063dd62ed3e1461024a578063f2fde38b1461028357600080fd5b8063715018a6146101c75780638980f11f146101d15780638da5cb5b146101e457806395d89b411461020957600080fd5b806323b872dd116100de57806323b872dd14610170578063313ce56714610183578063395093511461018b57806370a082311461019e57600080fd5b806306fdde0314610110578063095ea7b31461012e57806310c8aeac1461015157806318160ddd14610168575b600080fd5b610118610296565b60405161012591906109ff565b60405180910390f35b61014161013c366004610a69565b610328565b6040519015158152602001610125565b61015a60075481565b604051908152602001610125565b60025461015a565b61014161017e366004610a93565b61033f565b60035461015a565b610141610199366004610a69565b6103f5565b61015a6101ac366004610acf565b6001600160a01b031660009081526020819052604090205490565b6101cf61042c565b005b6101cf6101df366004610a69565b6104a0565b6006546001600160a01b03165b6040516001600160a01b039091168152602001610125565b610118610561565b61014161021f366004610a69565b610570565b610141610232366004610a69565b61060b565b6006546101f1906001600160a01b031681565b61015a610258366004610af1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101cf610291366004610acf565b610618565b6060600480546102a590610b24565b80601f01602080910402602001604051908101604052809291908181526020018280546102d190610b24565b801561031e5780601f106102f35761010080835404028352916020019161031e565b820191906000526020600020905b81548152906001019060200180831161030157829003601f168201915b5050505050905090565b6000610335338484610703565b5060015b92915050565b600061034c848484610827565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103d65760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103ea85336103e58685610b74565b610703565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103359185906103e5908690610b87565b6006546001600160a01b031633146104565760405162461bcd60e51b81526004016103cd90610b9a565b6006546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600680546001600160a01b0319169055565b6006546001600160a01b031633146104ca5760405162461bcd60e51b81526004016103cd90610b9a565b816001600160a01b031663a9059cbb6104eb6006546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610538573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055c9190610bcf565b505050565b6060600580546102a590610b24565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156105f25760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103cd565b61060133856103e58685610b74565b5060019392505050565b6000610335338484610827565b6006546001600160a01b031633146106425760405162461bcd60e51b81526004016103cd90610b9a565b6001600160a01b0381166106a75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103cd565b6006546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600680546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383166107655760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103cd565b6001600160a01b0382166107c65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103cd565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03831661088b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103cd565b6001600160a01b0382166108ed5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103cd565b6001600160a01b038316600090815260208190526040902054818110156109655760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103cd565b61096f8282610b74565b6001600160a01b0380861660009081526020819052604080822093909355908516815290812080548492906109a5908490610b87565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109f191815260200190565b60405180910390a350505050565b600060208083528351808285015260005b81811015610a2c57858101830151858201604001528201610a10565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610a6457600080fd5b919050565b60008060408385031215610a7c57600080fd5b610a8583610a4d565b946020939093013593505050565b600080600060608486031215610aa857600080fd5b610ab184610a4d565b9250610abf60208501610a4d565b9150604084013590509250925092565b600060208284031215610ae157600080fd5b610aea82610a4d565b9392505050565b60008060408385031215610b0457600080fd5b610b0d83610a4d565b9150610b1b60208401610a4d565b90509250929050565b600181811c90821680610b3857607f821691505b602082108103610b5857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561033957610339610b5e565b8082018082111561033957610339610b5e565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610be157600080fd5b81518015158114610aea57600080fdfea26469706673582212202e49db97212915bbed9ae5fa612a42bc5a16be9c22433fbfb8458bb0743a0f6564736f6c63430008130033";

type MuddyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MuddyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Muddy__factory extends ContractFactory {
  constructor(...args: MuddyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    initialBalance_: BigNumberish,
    tokenOwner: AddressLike,
    feeReceiver_: AddressLike,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name_,
      symbol_,
      decimals_,
      initialBalance_,
      tokenOwner,
      feeReceiver_,
      overrides || {}
    );
  }
  override deploy(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    initialBalance_: BigNumberish,
    tokenOwner: AddressLike,
    feeReceiver_: AddressLike,
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(
      name_,
      symbol_,
      decimals_,
      initialBalance_,
      tokenOwner,
      feeReceiver_,
      overrides || {}
    ) as Promise<
      Muddy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Muddy__factory {
    return super.connect(runner) as Muddy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MuddyInterface {
    return new Interface(_abi) as MuddyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Muddy {
    return new Contract(address, _abi, runner) as unknown as Muddy;
  }
}
